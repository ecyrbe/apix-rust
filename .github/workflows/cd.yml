name: CD
on:
  push:
    tags:
      - v*
jobs:
  release:
    name: build linux
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    outputs:
      release: ${{ fromJson(steps.release.outputs.release).id }}
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          profile: minimal
          default: true
      - name: build apix
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      # eat your own food. use apix to create a release
      - name: create release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |-
          chmod +x target/release/apix
          cd examples
          ../target/release/apix exec github-create-release > result.json
          content=`cat result.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=release::$content"
      - name: create tarball
        run: |-
          cp README.md target/release/README.md
          cp LICENSE target/release/LICENSE
          cd target/release
          tar -zcvf apix-${{github.ref_name}}-${{ matrix.job.target }}.tar.gz apix LICENSE README.md
      - name: upload tarball
        run: |-
          cd target/release
          ./apix post https://uploads.github.com/repos/${{ github.repository }}/releases/${{ fromJson(steps.release.outputs.release).id }}/assets -q "name:apix-${{github.ref_name}}-${{ matrix.job.target }}.tar.gz" -f apix-${{github.ref_name}}-${{ matrix.job.target }}.tar.gz -H "Authorization:Bearer ${{ secrets.GITHUB_TOKEN }}"  -H "Content-Type:application/gzip" -H "Accept:application/vnd.github.v3+json"
  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: .zip
            cmd: 7z -y a
            apix: apix.exe
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .zip
            cmd: 7z -y a
            apix: apix.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: .tar.gz
            cmd: tar -zcvf
            apix: apix
    runs-on: ${{ matrix.job.os }}
    needs:
      - release
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.job.target }}
          default: true
      - name: build apix
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: create artifact
        run: |-
          cp README.md target/release/README.md
          cp LICENSE target/release/LICENSE
          cd target/release
          ${{ matrix.job.cmd }} apix-${{github.ref_name}}-${{ matrix.job.target }}${{ matrix.job.ext }} ${{ matrix.job.apix }} LICENSE README.md
      - name: upload artifact
        run: |-
          cd target/release
          chmod +x ${{ matrix.job.apix }}
          ./${{ matrix.job.apix }} post https://uploads.github.com/repos/${{ github.repository }}/releases/${{ needs.release.outputs.release }}/assets -q "name:apix-${{github.ref_name}}-${{ matrix.job.target }}${{ matrix.job.ext }}" -f apix-${{github.ref_name}}-${{ matrix.job.target }}${{ matrix.job.ext }} -H "Authorization:Bearer ${{ secrets.GITHUB_TOKEN }}"  -H "Content-Type:application/gzip" -H "Accept:application/vnd.github.v3+json"
