name: CD
on:
  push:
    tags:
      - v*
jobs:
  release:
    name: build linux
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    outputs:
      release: ${{ fromJson(steps.release.outputs.release).id }}
    env:
      ASSET: apix-${{github.ref_name}}-${{ matrix.job.target }}.tar.gz
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ${{ matrix.job.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          profile: minimal
          default: true
      - name: build apix
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      # eat your own food. use apix to create a release
      - name: create release
        id: release
        run: |-
          chmod +x target/release/apix
          cd examples
          ../target/release/apix exec github-create-release > result.json
          content=`cat result.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=release::$content"
      - name: create tarball
        run: |-
          cp README.md target/release/README.md
          cp LICENSE target/release/LICENSE
          cd target/release
          tar -zcvf ${ASSET} apix LICENSE README.md
      - name: upload tarball
        env:
          RELEASE_ID: ${{ fromJson(steps.release.outputs.release).id }}
        run: |-
          cd examples
          ../target/release/apix exec github-upload-release-asset -p releaseId:${RELEASE_ID} -p asset:${ASSET}
  build:
    strategy:
      fail-fast: false
      matrix:
        job:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: .zip
            compress: 7z -y a
            apix: apix.exe
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .zip
            compress: 7z -y a
            apix: apix.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: .tar.gz
            compress: tar -zcvf
            apix: apix
    runs-on: ${{ matrix.job.os }}
    needs:
      - release
    env:
      ASSET: apix-${{github.ref_name}}-${{ matrix.job.target }}${{ matrix.job.ext }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.job.target }}
          default: true
      - name: build apix
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: create artifact
        run: |-
          cp README.md target/release/README.md
          cp LICENSE target/release/LICENSE
          cd target/release
          chmod +x ${{ matrix.job.apix }}
          ${{ matrix.job.compress }} ${ASSET} ${{ matrix.job.apix }} LICENSE README.md
      - name: upload artifact
        env:
          RELEASE_ID: ${{ needs.release.outputs.release }}
        run: |-
          cd examples
          ../target/release/${{ matrix.job.apix }} exec github-upload-release-asset -p releaseId:${RELEASE_ID} -p asset:${ASSET}
